

[tool.poetry]
name = "easy_viz_cnn"
version = "0.1.0"
description = "A simple tool for visualizing CNN architectures."
authors = ["Sadegh Yazdani <silverstar10@gmail.com>"]
license = "GPLv3"
readme = "README.md"
homepage = "https://github.com/AvidDevelopers/EasyVizCNN"
repository = "https://github.com/AvidDevelopers/EasyVizCNN"
documentation = "https://AvidDevelopers.github.io/EasyVizCNN"

[tool.poetry.dependencies]
python = "^3.11"
matplotlib = "^3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
mypy = "^1.0"
black = "^24.8"
flake8-pyproject = "^1.2.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.11"       # Specify the Python version you're targeting
ignore_missing_imports = true # Ignore missing imports for third-party packages


[tool.mypy.easy_viz_cnn]
ignore_missing_imports = false


[tool.pylint.messages_control]
max-line-length = 120
disable = [
  "import-outside-toplevel",
  "broad-except",
  "bare-except",
  "unused-import",
  "unused-variable",
  "missing-docstring",
  "unused-argument",
  "invalid-name",
  "no-value-for-parameter",
  "no-member",
  "no-self-use",
  "import-error",
  "line-too-long",
  "protected-access",
  "too-few-public-methods",
]

[tool.pylint.design]
# limiting the number of returns might discourage
# the use of guard clauses. So we increase the
# allowed number of returns from 6 to 8
max-returns = 8
# Maximum number of arguments for function / method.
max-args=15

max-parents=15

# Maximum number of attributes for a class (see R0902).
max-attributes=15

# Maximum number of boolean expressions in an if statement.
max-bool-expr=5

# Maximum number of locals for function / method body.
max-locals=25

# Maximum number of statements in function / method body.
max-statements=50

# Minimum number of public methods for a class (see R0903).
min-public-methods=1


[tool.black]
line-length = 99


[tool.flake8]
ignore = ['E231', 'E241']
max-line-length = 99
per-file-ignores = [
  # '__init__.py:F401',
]
# count = true
